<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

<#@include file="Manager.tt"#> 
<#@include file="DBSql.tt"#>

<# var manager = Manager.Create(Host, GenerationEnvironment); #>

<# manager.StartHeader(); #>
using System;
using System.Collections.Generic;
namespace PM.Base
{   
<# manager.EndBlock(); #>

<#        
    
    SqlConnection conn = new SqlConnection(connectionString);
    conn.Open();
    
    string selectQuery ="SET FMTONLY ON; select * from @tableName; SET FMTONLY OFF;";
    SqlCommand command = new SqlCommand(selectQuery,conn);
    SqlDataAdapter ad = new SqlDataAdapter(command);
    System.Data.DataSet ds = new DataSet(); 
    
	var schema = GetSchema();
    foreach(System.Data.DataRow row in schema)
    {    
        ds.Tables.Clear();
        string tb_name = row["TABLE_NAME"].ToString();        
        command.CommandText = selectQuery.Replace("@tableName",row["TABLE_NAME"].ToString());
        ad.FillSchema(ds,SchemaType.Mapped,tb_name);  
        manager.StartNewFile(tb_name+"Entity.cs");
#>
    /// <summary>
    /// 实体-<#=tb_name#> 
    /// </summary>
    public partial class <#=tb_name#>Entity    
    {    
        <#
        PushIndent("          ");
        foreach (DataColumn dc in ds.Tables[0].Columns) 
        {
            WriteLine("public " + dc.DataType.Name + (dc.AllowDBNull && dc.DataType.Name.ToLower() != "string" ? "? ": " ") + dc.ColumnName + " { get; set; }");
        }
        PopIndent();
        #>


		public <#=tb_name#>Entity()
		{
		}

		public <#=tb_name#>Entity(<#=tb_name#>Info Info)
        {
			<#
			foreach (DataColumn dc in ds.Tables[0].Columns) 
			{
				WriteLine("this."  + dc.ColumnName + " = Info." + dc.ColumnName + ";");
			}
			PopIndent();
			#>
        }

		public void SetEntity(<#=tb_name#>Entity Entity)
		{
			<#
			var index = 0;
			foreach (DataColumn dc in ds.Tables[0].Columns) 
			{
				if(!ds.Tables[0].PrimaryKey.Contains(dc))
				{
					if(index > 0)
					{
						WriteLine("				this." + dc.ColumnName + " = Entity." + dc.ColumnName + ";");
					}
					else
					{
						WriteLine("this." + dc.ColumnName + " = Entity." + dc.ColumnName + ";");
					}

					index++;
				}
			}
			
			#>

		}
    } 
<#
        manager.EndBlock();    
    }            
    conn.Close();  
#>



<# manager.StartFooter(); #>
}
<# manager.EndBlock(); #>

<# manager.Process(true); #>